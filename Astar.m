clear
M=tree;
A=tree;
B=tree;
C=tree;
D=tree;
E=tree;
F=tree;
G=tree;
H=tree;
I=tree;
J=tree;
K=tree;
L=tree;
P=tree;
M.name="M";
M.parent=[];
M.g=0;
M.h=4.85;
M.f=M.g+M.h;
M.position=1;
A.name="A";
A.parent=M;
A.g=M.g+2.3;
A.h=5.86;
A.f=A.g+A.h;
A.position=1;
B.name="B";
B.parent=M;
B.g=M.g+1.4;
B.h=3.51;
B.f=B.g+B.h;
B.position=1;
C.name="C";
C.parent=M;
C.g=M.g+0.9;
C.h=4.71;
C.f=C.g+C.h;
C.position=1;
D.name="D";
D.parent=A;
D.g=A.g+3.7;
D.h=3.64;
D.f=D.g+D.h;
D.position=1;
F.name="F";
F.parent=[B,C];
F.g=min(B.g+0.7,C.g+1.5);
F.h=3.34;
F.f=F.g+F.h;
F.position=find([B.g+0.7,C.g+1.5]+F.h==F.f);
E.name="E";
E.parent=[B,F];
E.g=min(B.g+1.0,F.g+1.8);
E.h=2.59;
E.f=E.g+E.h;
E.position=find([B.g+1.0,F.g+1.8]+E.h==E.f);
G.name="G";
G.parent=C;
G.g=C.g+1.5;
G.h=4.58;
G.f=G.g+G.h;
G.position=1;
H.name="H";
H.parent=[D,E];
H.g=min(D.g+2.3,E.g+1.3);
H.h=1.56;
H.f=H.g+H.h;
H.position=find([D.g+2.3,E.g+1.3]+H.h==H.f);
I.name="I";
I.parent=[F,H];
I.g=min(F.g+2.3,H.g+0.7);
I.h=1.12;
I.f=I.g+I.h;
I.position=find([F.g+2.3,H.g+0.7]+I.h==I.f);
J.name="J";
J.parent=[G,I];
J.g=min(G.g+4,I.g+1.7);
J.h=1.56;
J.f=J.g+J.h;
J.position=find([G.g+4,I.g+1.7]+J.h==J.f);
L.name="L";
L.parent=J;
L.g=J.g+1.5;
L.h=1;
L.f=L.g+L.h;
L.position=1;
K.name="K";
K.parent=[H,I];
K.g=min(H.g+1.5,I.g+1.4);
K.h=0.9;
K.f=K.g+K.h;
K.position=find([H.g+1.5,I.g+1.4]+K.h==K.f);
P.name="P";
P.parent=[K,L];
P.g=min(K.g+0.9,L.g+1.0);
P.h=0;
P.f=P.g+P.h;
P.position=find([K.g+0.9,L.g+1.0]+P.h==P.f);

m='';
i=2;
b=P;
m(1)=P.name;
while true
    if length(b.parent)>=1
        m(i)=b.parent(b.position).name;
        b=b.parent(b.position);
        i=i+1;
    end
    if length(b.parent)==0
        break
    end
end
fprintf(fliplr(m))